<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Intermedia\Ksef\Apiv2\Models\Components;


class PersonalPermission
{
    /**
     * Identyfikator uprawnienia.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Uprawnienie.
     *
     * @var PersonalPermissionScope $permissionScope
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('permissionScope')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PersonalPermissionScope')]
    public PersonalPermissionScope $permissionScope;

    /**
     * Opis uprawnienia.
     *
     * @var string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    public string $description;

    /**
     * Stan uprawnienia.
     *
     * @var PermissionState $permissionState
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('permissionState')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PermissionState')]
    public PermissionState $permissionState;

    /**
     * Data rozpoczęcia obowiązywania uprawnienia.
     *
     * @var \DateTime $startDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('startDate')]
    public \DateTime $startDate;

    /**
     * Informacja o możliwości dalszego nadawania uprawnienia w sposób pośredni.
     *
     * @var bool $canDelegate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('canDelegate')]
    public bool $canDelegate;

    /**
     * Identyfikator kontekstu uprawnienia, jeśli inny niż kontekst uwierzytelnienia.
     *
     * @var ?string $contextIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contextIdentifier')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $contextIdentifier = null;

    /**
     * Typ identyfikatora kontekstu uprawnienia.
     *
     * @var ?PersonalPermissionContextIdentifierType $contextIdentifierType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contextIdentifierType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PersonalPermissionContextIdentifierType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PersonalPermissionContextIdentifierType $contextIdentifierType = null;

    /**
     * Identyfikator podmiotu uprawnionego, jeśli inny niż podmiot uwierzytelnienia.
     *
     * @var ?string $authorizedIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authorizedIdentifier')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $authorizedIdentifier = null;

    /**
     * Typ identyfikatora podmiotu uprawnionego.
     *
     * @var ?AuthorizedIdentifierType $authorizedIdentifierType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authorizedIdentifierType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\AuthorizedIdentifierType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?AuthorizedIdentifierType $authorizedIdentifierType = null;

    /**
     * Identyfikator podmiotu docelowego.
     *
     * @var ?string $targetIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('targetIdentifier')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $targetIdentifier = null;

    /**
     * Typ identyfikatora podmiotu docelowego.
     *
     * @var ?PersonalPermissionTargetIdentifierType $targetIdentifierType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('targetIdentifierType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PersonalPermissionTargetIdentifierType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PersonalPermissionTargetIdentifierType $targetIdentifierType = null;

    /**
     * @param  string  $id
     * @param  PersonalPermissionScope  $permissionScope
     * @param  string  $description
     * @param  PermissionState  $permissionState
     * @param  \DateTime  $startDate
     * @param  bool  $canDelegate
     * @param  ?string  $contextIdentifier
     * @param  ?PersonalPermissionContextIdentifierType  $contextIdentifierType
     * @param  ?string  $authorizedIdentifier
     * @param  ?AuthorizedIdentifierType  $authorizedIdentifierType
     * @param  ?string  $targetIdentifier
     * @param  ?PersonalPermissionTargetIdentifierType  $targetIdentifierType
     * @phpstan-pure
     */
    public function __construct(string $id, PersonalPermissionScope $permissionScope, string $description, PermissionState $permissionState, \DateTime $startDate, bool $canDelegate, ?string $contextIdentifier = null, ?PersonalPermissionContextIdentifierType $contextIdentifierType = null, ?string $authorizedIdentifier = null, ?AuthorizedIdentifierType $authorizedIdentifierType = null, ?string $targetIdentifier = null, ?PersonalPermissionTargetIdentifierType $targetIdentifierType = null)
    {
        $this->id = $id;
        $this->permissionScope = $permissionScope;
        $this->description = $description;
        $this->permissionState = $permissionState;
        $this->startDate = $startDate;
        $this->canDelegate = $canDelegate;
        $this->contextIdentifier = $contextIdentifier;
        $this->contextIdentifierType = $contextIdentifierType;
        $this->authorizedIdentifier = $authorizedIdentifier;
        $this->authorizedIdentifierType = $authorizedIdentifierType;
        $this->targetIdentifier = $targetIdentifier;
        $this->targetIdentifierType = $targetIdentifierType;
    }
}