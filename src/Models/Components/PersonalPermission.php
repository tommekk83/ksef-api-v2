<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Intermedia\Ksef\Apiv2\Models\Components;


class PersonalPermission
{
    /**
     * Identyfikator uprawnienia.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Rodzaj uprawnienia.
     *
     * @var PersonalPermissionScope $permissionScope
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('permissionScope')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PersonalPermissionScope')]
    public PersonalPermissionScope $permissionScope;

    /**
     * Opis uprawnienia.
     *
     * @var string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    public string $description;

    /**
     * Stan uprawnienia.
     *
     * @var PermissionState $permissionState
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('permissionState')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PermissionState')]
    public PermissionState $permissionState;

    /**
     * Data rozpoczęcia obowiązywania uprawnienia.
     *
     * @var \DateTime $startDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('startDate')]
    public \DateTime $startDate;

    /**
     * Flaga określająca, czy uprawnienie ma być możliwe do dalszego przekazywania.
     *
     * @var bool $canDelegate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('canDelegate')]
    public bool $canDelegate;

    /**
     * Identyfikator kontekstu podmiotu, który nadał uprawnienia do obsługi faktur.
     *
     * | Type | Value |
     * | --- | --- |
     * | Nip | 10 cyfrowy numer NIP |
     *
     * @var ?PersonalPermissionContextIdentifier $contextIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contextIdentifier')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PersonalPermissionContextIdentifier|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PersonalPermissionContextIdentifier $contextIdentifier = null;

    /**
     * Identyfikator podmiotu uprawnionego, jeżeli jest inny niż identyfikator uwierzytelnionego klienta API.
     *
     * | Type | Value |
     * | --- | --- |
     * | Nip | 10 cyfrowy numer NIP |
     *
     * @var ?PersonalPermissionAuthorizedIdentifier $authorizedIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authorizedIdentifier')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PersonalPermissionAuthorizedIdentifier|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PersonalPermissionAuthorizedIdentifier $authorizedIdentifier = null;

    /**
     * Identyfikator podmiotu docelowego dla uprawnień selektywnych nadanych pośrednio.
     *
     * | Type | Value |
     * | --- | --- |
     * | Nip | 10 cyfrowy numer NIP |
     * | AllPartners | Identyfikator oznaczający, że wyszukiwanie dotyczy uprawnień generalnych nadanych w sposób pośredni |
     * | InternalId | Dwuczłonowy identyfikator składający się z numeru NIP i 5 cyfr: `{nip}-{5_cyfr}` |
     *
     * @var ?PersonalPermissionTargetIdentifier $targetIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('targetIdentifier')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\PersonalPermissionTargetIdentifier|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PersonalPermissionTargetIdentifier $targetIdentifier = null;

    /**
     * @param  string  $id
     * @param  PersonalPermissionScope  $permissionScope
     * @param  string  $description
     * @param  PermissionState  $permissionState
     * @param  \DateTime  $startDate
     * @param  bool  $canDelegate
     * @param  ?PersonalPermissionContextIdentifier  $contextIdentifier
     * @param  ?PersonalPermissionAuthorizedIdentifier  $authorizedIdentifier
     * @param  ?PersonalPermissionTargetIdentifier  $targetIdentifier
     * @phpstan-pure
     */
    public function __construct(string $id, PersonalPermissionScope $permissionScope, string $description, PermissionState $permissionState, \DateTime $startDate, bool $canDelegate, ?PersonalPermissionContextIdentifier $contextIdentifier = null, ?PersonalPermissionAuthorizedIdentifier $authorizedIdentifier = null, ?PersonalPermissionTargetIdentifier $targetIdentifier = null)
    {
        $this->id = $id;
        $this->permissionScope = $permissionScope;
        $this->description = $description;
        $this->permissionState = $permissionState;
        $this->startDate = $startDate;
        $this->canDelegate = $canDelegate;
        $this->contextIdentifier = $contextIdentifier;
        $this->authorizedIdentifier = $authorizedIdentifier;
        $this->targetIdentifier = $targetIdentifier;
    }
}