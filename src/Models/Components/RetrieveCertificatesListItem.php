<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Intermedia\Ksef\Apiv2\Models\Components;


class RetrieveCertificatesListItem
{
    /**
     * Certyfikat w formacie DER zakodowany w Base64.
     *
     * @var string $certificate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('certificate')]
    public string $certificate;

    /**
     * Nazwa własna certyfikatu.
     *
     * @var string $certificateName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('certificateName')]
    public string $certificateName;

    /**
     * Numer seryjny certyfikatu.
     *
     * @var string $certificateSerialNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('certificateSerialNumber')]
    public string $certificateSerialNumber;

    /**
     * Typ certyfikatu.
     *
     * | Wartość | Opis |
     * | --- | --- |
     * | Authentication | Certyfikat używany do uwierzytelnienia w systemie. |
     * | Offline | Certyfikat używany wyłącznie do potwierdzania autentyczności wystawcy i integralności faktury w trybie offline |
     *
     *
     * @var KsefCertificateType $certificateType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('certificateType')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\KsefCertificateType')]
    public KsefCertificateType $certificateType;

    /**
     * @param  string  $certificate
     * @param  string  $certificateName
     * @param  string  $certificateSerialNumber
     * @param  KsefCertificateType  $certificateType
     * @phpstan-pure
     */
    public function __construct(string $certificate, string $certificateName, string $certificateSerialNumber, KsefCertificateType $certificateType)
    {
        $this->certificate = $certificate;
        $this->certificateName = $certificateName;
        $this->certificateSerialNumber = $certificateSerialNumber;
        $this->certificateType = $certificateType;
    }
}