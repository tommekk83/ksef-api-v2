<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Intermedia\Ksef\Apiv2\Models\Components;


class AuthenticationListItem
{
    /**
     * Data rozpoczęcia operacji uwierzytelnienia.
     *
     * @var \DateTime $startDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('startDate')]
    public \DateTime $startDate;

    /**
     * Użyta metoda uwierzytelnienia.
     *
     * | Wartość | Opis |
     * | --- | --- |
     * | Token | Token KSeF. |
     * | TrustedProfile | Profil Zaufany. |
     * | InternalCertificate | Certyfikat KSeF. |
     * | QualifiedSignature | Podpis kwalifikowany. |
     * | QualifiedSeal | Pieczęć kwalifikowana. |
     * | PersonalSignature | Podpis osobisty. |
     * | PeppolSignature | Podpis dostawcy uslug Peppol. |
     *
     *
     * @var AuthenticationMethod $authenticationMethod
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('authenticationMethod')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\AuthenticationMethod')]
    public AuthenticationMethod $authenticationMethod;

    /**
     * Informacje o aktualnym statusie.
     *
     * | Code | Description | Details |
     * | --- | --- | --- |
     * | 100 | Uwierzytelnianie w toku | - |
     * | 200 | Uwierzytelnianie zakończone sukcesem | - |
     * | 415 | Uwierzytelnianie zakończone niepowodzeniem | Brak przypisanych uprawnień |
     * | 425 | Uwierzytelnienie unieważnione  | Uwierzytelnienie i powiązane refresh tokeny zostały unieważnione przez użytkownika |
     * | 450 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędnego tokenu | Nieprawidłowy token |
     * | 450 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędnego tokenu | Nieprawidłowy czas tokena |
     * | 450 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędnego tokenu | Token unieważniony |
     * | 450 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędnego tokenu | Token nieaktywny |
     * | 460 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędu certyfikatu | Nieważny certyfikat |
     * | 460 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędu certyfikatu | Błąd weryfikacji łańcucha certyfikatów |
     * | 460 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędu certyfikatu | Niezaufany łańcuch certyfikatów |
     * | 460 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędu certyfikatu | Certyfikat odwołany |
     * | 460 | Uwierzytelnianie zakończone niepowodzeniem z powodu błędu certyfikatu | Niepoprawny certyfikat |
     * | 500 | Nieznany błąd | - |
     *
     * @var StatusInfo $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Intermedia\Ksef\Apiv2\Models\Components\StatusInfo')]
    public StatusInfo $status;

    /**
     * Numer referencyjny operacji uwierzytelnienia.
     *
     * @var string $referenceNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('referenceNumber')]
    public string $referenceNumber;

    /**
     * Czy sesja jest powiązana z aktualnie używanym tokenem.
     *
     * @var ?bool $isCurrent
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('isCurrent')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isCurrent = null;

    /**
     * Czy został już wydany refresh token powiązany z danym uwierzytelnieniem.
     *
     * @var ?bool $isTokenRedeemed
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('isTokenRedeemed')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isTokenRedeemed = null;

    /**
     * Data ostatniego odświeżenia tokena.
     *
     * @var ?\DateTime $lastTokenRefreshDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lastTokenRefreshDate')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $lastTokenRefreshDate = null;

    /**
     * Termin ważności refresh tokena (o ile nie zostanie wcześniej unieważniony).
     *
     * @var ?\DateTime $refreshTokenValidUntil
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refreshTokenValidUntil')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $refreshTokenValidUntil = null;

    /**
     * @param  \DateTime  $startDate
     * @param  AuthenticationMethod  $authenticationMethod
     * @param  StatusInfo  $status
     * @param  string  $referenceNumber
     * @param  ?bool  $isCurrent
     * @param  ?bool  $isTokenRedeemed
     * @param  ?\DateTime  $lastTokenRefreshDate
     * @param  ?\DateTime  $refreshTokenValidUntil
     * @phpstan-pure
     */
    public function __construct(\DateTime $startDate, AuthenticationMethod $authenticationMethod, StatusInfo $status, string $referenceNumber, ?bool $isCurrent = null, ?bool $isTokenRedeemed = null, ?\DateTime $lastTokenRefreshDate = null, ?\DateTime $refreshTokenValidUntil = null)
    {
        $this->startDate = $startDate;
        $this->authenticationMethod = $authenticationMethod;
        $this->status = $status;
        $this->referenceNumber = $referenceNumber;
        $this->isCurrent = $isCurrent;
        $this->isTokenRedeemed = $isTokenRedeemed;
        $this->lastTokenRefreshDate = $lastTokenRefreshDate;
        $this->refreshTokenValidUntil = $refreshTokenValidUntil;
    }
}