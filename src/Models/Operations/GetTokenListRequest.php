<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Intermedia\Ksef\Apiv2\Models\Operations;

use Intermedia\Ksef\Apiv2\Models\Components;
use Intermedia\Ksef\Apiv2\Utils\SpeakeasyMetadata;
class GetTokenListRequest
{
    /**
     * Status tokenów do zwrócenia. W przypadku braku parametru zwracane są wszystkie tokeny. Parametr można przekazać wielokrotnie.
     *
     * | Wartość | Opis |
     * | --- | --- |
     * | Pending | Token został utworzony ale jest jeszcze w trakcie aktywacji i nadawania uprawnień. Nie może być jeszcze wykorzystywany do uwierzytelniania. |
     * | Active | Token jest aktywny i może być wykorzystywany do uwierzytelniania. |
     * | Revoking | Token jest w trakcie unieważniania. Nie może już być wykorzystywany do uwierzytelniania. |
     * | Revoked | Token został unieważniony i nie może być wykorzystywany do uwierzytelniania. |
     * | Failed | Nie udało się aktywować tokena. Należy wygenerować nowy token, obecny nie może być wykorzystywany do uwierzytelniania. |
     *
     *
     * @var ?array<Components\AuthenticationTokenStatus> $status
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=status')]
    public ?array $status = null;

    /**
     * Umożliwia filtrowanie tokenów po opisie. Wartość parametru jest wyszukiwana w opisie tokena (operacja nie rozróżnia wielkości liter). Należy podać co najmniej 3 znaki.
     *
     * @var ?string $description
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=description')]
    public ?string $description = null;

    /**
     * Umożliwia filtrowanie tokenów po ich twórcy. Wartość parametru jest wyszukiwana w identyfikatorze (operacja nie rozróżnia wielkości liter). Należy podać co najmniej 3 znaki.
     *
     * @var ?string $authorIdentifier
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=authorIdentifier')]
    public ?string $authorIdentifier = null;

    /**
     * Umożliwia filtrowanie tokenów po ich twórcy. Wartość parametru określa typ identyfikatora w którym będzie wyszukiwany ciąg znaków przekazany w parametrze `authorIdentifier`.
     *
     * | Wartość | Opis |
     * | --- | --- |
     * | Nip | NIP. |
     * | Pesel | PESEL. |
     * | Fingerprint | Odcisk palca certyfikatu. |
     *
     *
     * @var ?Components\TokenAuthorIdentifierType $authorIdentifierType
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=authorIdentifierType')]
    public ?Components\TokenAuthorIdentifierType $authorIdentifierType = null;

    /**
     * Token służący do pobrania kolejnej strony wyników.
     *
     * @var ?string $xContinuationToken
     */
    #[SpeakeasyMetadata('header:style=simple,explode=false,name=x-continuation-token')]
    public ?string $xContinuationToken = null;

    /**
     * Rozmiar strony wyników.
     *
     * @var ?int $pageSize
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pageSize')]
    public ?int $pageSize = null;

    /**
     * @param  ?array<Components\AuthenticationTokenStatus>  $status
     * @param  ?string  $description
     * @param  ?string  $authorIdentifier
     * @param  ?Components\TokenAuthorIdentifierType  $authorIdentifierType
     * @param  ?int  $pageSize
     * @param  ?string  $xContinuationToken
     * @phpstan-pure
     */
    public function __construct(?array $status = null, ?string $description = null, ?string $authorIdentifier = null, ?Components\TokenAuthorIdentifierType $authorIdentifierType = null, ?string $xContinuationToken = null, ?int $pageSize = 10)
    {
        $this->status = $status;
        $this->description = $description;
        $this->authorIdentifier = $authorIdentifier;
        $this->authorIdentifierType = $authorIdentifierType;
        $this->xContinuationToken = $xContinuationToken;
        $this->pageSize = $pageSize;
    }
}